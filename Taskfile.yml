version: "3"

env:
  TAGS: "all"
  DOCKER_USER: bartdorlandt
  VERSION: latest
  REMOTE_PATH: "/Volumes/docker/mail_groene_maaiers"

vars:
  docker_compose_tty: ""
  docker_run_tty: "-it"
  name: mail_groene_maaiers

tasks:
  default:
    cmd: task -l --sort none
    silent: true

  test:
    desc: "Running python tests"
    deps: [pytest, mypy, ruff]

  python_fix:
    desc: "Run python formatters"
    aliases: [fix]
    cmds:
      - uv run ruff check . --fix
      - uv run ruff format . -v

  pytest:
    desc: "Run pytest"
    cmds:
      - uv run pytest -v

  mypy:
    desc: "Run mypy"
    cmds:
      - uv run mypy . --junit-xml mypy_report.xml --enable-incomplete-feature=NewGenericSyntax

  ruff:
    desc: "Run ruff"
    cmds:
      - uv run ruff check .
      - uv run ruff format --diff .

  docker:build:
    desc: "Build the docker image"
    aliases: [build, Dbuild, docker]
    cmds:
      - DOCKER_BUILDKIT=1 docker build --tag "{{.DOCKER_USER}}/{{.name}}":"{{.VERSION}}" .

  docker:build:nocache:
    desc: "Build the docker image"
    aliases: [build, Dbuild, docker]
    cmds:
      - DOCKER_BUILDKIT=1 docker build --no-cache --tag "{{.DOCKER_USER}}/{{.name}}":"{{.VERSION}}" .

  docker:clean:
    desc: "Clean the docker image"
    aliases: [clean_docker, Dclean]
    cmds:
      - docker rmi "{{.DOCKER_USER}}/{{.name}}":"{{.VERSION}}" --force

  docker:rebuild:
    desc: "Rebuild the docker image"
    aliases: [rebuild, Drebuild]
    cmds:
      - task: docker_clean
      - task: docker_build

  docker:bash:
    desc: "Exec into the container with bash"
    cmd: |
      docker run -it --rm \
      -v ./.env:/app/.env \
      -v ./credentials.json:/app/credentials.json --entrypoint bash \
      "{{.DOCKER_USER}}/{{.name}}":"{{.VERSION}}"

  mail:
    desc: "Send the email"
    silent: true
    cmds:
      - ./mail.sh

  sync:
    desc: "Sync the files to the remote system"
    silent: true
    cmds:
      - rsync -avz credentials.json main.py mail.sh src Taskfile.yml env.example --exclude '**/__pycache__' "{{.REMOTE_PATH}}"

  install:nodev:
    desc: "Install the python dependencies"
    aliases: [install]
    cmds:
      - uv venv
      - uv sync --no-dev

  install:dev:
    desc: "Install the python dependencies"
    cmds:
      - uv venv
      - uv sync

  clean:
    desc: "Clean up the files and dirs"
    silent: true
    cmds:
      - rm -rf .venv .nox .ruff_cache .pytest_cache .mypy_cache .coverage htmlcov __pycache__ coverage.xml pytest_report.xml mypy_report.xml dist

  act:checks:
    desc: "Run checks with act, to test github actions"
    cmds:
      - act -j checks

  act:build:
    desc: "Run build with act, to test github actions"
    cmds:
      - act -j build

  act:push:
    desc: "Run push with act, to test github actions"
    cmds:
      - act -j push
